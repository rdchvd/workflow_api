"""Create polymorphic connection

Revision ID: b9f4bc129a39
Revises: 3119ba71c224
Create Date: 2024-04-25 16:47:02.793436

"""

from typing import Sequence, Union

import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "b9f4bc129a39"
down_revision: Union[str, None] = "3119ba71c224"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "node_configurations",
        sa.Column("node_id", sa.Uuid(), nullable=False),
        sa.Column(
            "node_type",
            sa.Enum("start", "message", "condition", "end", name="nodetype", create_type=False).with_variant(
                postgresql.ENUM(
                    "start",
                    "message",
                    "condition",
                    "end",
                    name="nodetype",
                    create_type=False,
                ),
                "postgresql",
            ),
            nullable=False,
        ),
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("created_by", sa.Uuid(), nullable=True),
        sa.ForeignKeyConstraint(
            ["node_id"],
            ["nodes.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_node_configurations_id"), "node_configurations", ["id"], unique=True)
    op.add_column("condition_node_configurations", sa.Column("condition", sa.String(), nullable=False))
    op.drop_index("ix_condition_node_configurations_id", table_name="condition_node_configurations")
    op.drop_constraint(
        "condition_node_configurations_node_id_fkey", "condition_node_configurations", type_="foreignkey"
    )
    op.create_foreign_key("condition_node_fkey", "condition_node_configurations", "node_configurations", ["id"], ["id"])
    op.drop_column("condition_node_configurations", "updated_at")
    op.drop_column("condition_node_configurations", "node_id")
    op.drop_column("condition_node_configurations", "created_by")
    op.drop_column("condition_node_configurations", "created_at")
    op.drop_index("ix_end_node_configurations_id", table_name="end_node_configurations")
    op.drop_constraint("end_node_configurations_node_id_fkey", "end_node_configurations", type_="foreignkey")
    op.create_foreign_key("end_node_fkey", "end_node_configurations", "node_configurations", ["id"], ["id"])
    op.drop_column("end_node_configurations", "updated_at")
    op.drop_column("end_node_configurations", "node_id")
    op.drop_column("end_node_configurations", "created_by")
    op.drop_column("end_node_configurations", "created_at")
    op.drop_index("ix_message_node_configurations_id", table_name="message_node_configurations")
    op.drop_constraint("message_node_configurations_node_id_fkey", "message_node_configurations", type_="foreignkey")
    op.create_foreign_key("message_node_fkey", "message_node_configurations", "node_configurations", ["id"], ["id"])
    op.drop_column("message_node_configurations", "updated_at")
    op.drop_column("message_node_configurations", "node_id")
    op.drop_column("message_node_configurations", "created_by")
    op.drop_column("message_node_configurations", "created_at")
    op.drop_index("ix_start_node_configurations_id", table_name="start_node_configurations")
    op.drop_constraint("start_node_configurations_node_id_fkey", "start_node_configurations", type_="foreignkey")
    op.create_foreign_key("start_node_fkey", "start_node_configurations", "node_configurations", ["id"], ["id"])
    op.drop_column("start_node_configurations", "updated_at")
    op.drop_column("start_node_configurations", "node_id")
    op.drop_column("start_node_configurations", "created_by")
    op.drop_column("start_node_configurations", "created_at")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "start_node_configurations",
        sa.Column("created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    )
    op.add_column("start_node_configurations", sa.Column("created_by", sa.UUID(), autoincrement=False, nullable=True))
    op.add_column("start_node_configurations", sa.Column("node_id", sa.UUID(), autoincrement=False, nullable=False))
    op.add_column(
        "start_node_configurations",
        sa.Column("updated_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    )
    op.drop_constraint("start_node_fkey", "start_node_configurations", type_="foreignkey")
    op.create_foreign_key(
        "start_node_configurations_node_id_fkey", "start_node_configurations", "nodes", ["node_id"], ["id"]
    )
    op.create_index("ix_start_node_configurations_id", "start_node_configurations", ["id"], unique=True)
    op.add_column(
        "message_node_configurations",
        sa.Column("created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    )
    op.add_column("message_node_configurations", sa.Column("created_by", sa.UUID(), autoincrement=False, nullable=True))
    op.add_column("message_node_configurations", sa.Column("node_id", sa.UUID(), autoincrement=False, nullable=False))
    op.add_column(
        "message_node_configurations",
        sa.Column("updated_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    )
    op.drop_constraint("message_node_fkey", "message_node_configurations", type_="foreignkey")
    op.create_foreign_key(
        "message_node_configurations_node_id_fkey", "message_node_configurations", "nodes", ["node_id"], ["id"]
    )
    op.create_index("ix_message_node_configurations_id", "message_node_configurations", ["id"], unique=True)
    op.add_column(
        "end_node_configurations", sa.Column("created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False)
    )
    op.add_column("end_node_configurations", sa.Column("created_by", sa.UUID(), autoincrement=False, nullable=True))
    op.add_column("end_node_configurations", sa.Column("node_id", sa.UUID(), autoincrement=False, nullable=False))
    op.add_column(
        "end_node_configurations", sa.Column("updated_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False)
    )
    op.drop_constraint("end_node_fkey", "end_node_configurations", type_="foreignkey")
    op.create_foreign_key(
        "end_node_configurations_node_id_fkey", "end_node_configurations", "nodes", ["node_id"], ["id"]
    )
    op.create_index("ix_end_node_configurations_id", "end_node_configurations", ["id"], unique=True)
    op.add_column(
        "condition_node_configurations",
        sa.Column("created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    )
    op.add_column(
        "condition_node_configurations", sa.Column("created_by", sa.UUID(), autoincrement=False, nullable=True)
    )
    op.add_column("condition_node_configurations", sa.Column("node_id", sa.UUID(), autoincrement=False, nullable=False))
    op.add_column(
        "condition_node_configurations",
        sa.Column("updated_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    )
    op.drop_constraint("condition_node_fkey", "condition_node_configurations", type_="foreignkey")
    op.create_foreign_key(
        "condition_node_configurations_node_id_fkey", "condition_node_configurations", "nodes", ["node_id"], ["id"]
    )
    op.create_index("ix_condition_node_configurations_id", "condition_node_configurations", ["id"], unique=True)
    op.drop_column("condition_node_configurations", "condition")
    op.drop_index(op.f("ix_node_configurations_id"), table_name="node_configurations")
    op.drop_table("node_configurations")
    # ### end Alembic commands ###
