"""Create Permission table

Revision ID: 301b9018900c
Revises: cbf3cfdb094f
Create Date: 2024-04-24 15:57:06.774152

"""

from typing import Sequence, Union

import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "301b9018900c"
down_revision: Union[str, None] = "cbf3cfdb094f"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "permissions",
        sa.Column("user_id", sa.Uuid(), nullable=False),
        sa.Column("workflow_id", sa.Uuid(), nullable=False),
        sa.Column("permission", sa.Enum("view", "edit", "delete", name="permissiontype"), nullable=False),
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("created_by", sa.Uuid(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["workflow_id"],
            ["workflows.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("user_id", "workflow_id", "permission"),
    )
    op.drop_table("workflow_editors")
    op.drop_table("workflow_viewers")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "workflow_viewers",
        sa.Column("user_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("workflow_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.Column("updated_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.Column("created_by", sa.UUID(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], name="workflow_viewers_user_id_fkey"),
        sa.ForeignKeyConstraint(["workflow_id"], ["workflows.id"], name="workflow_viewers_workflow_id_fkey"),
        sa.PrimaryKeyConstraint("id", name="workflow_viewers_pkey"),
        sa.UniqueConstraint("user_id", "workflow_id", name="workflow_viewers_user_id_workflow_id_key"),
    )
    op.create_table(
        "workflow_editors",
        sa.Column("user_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("workflow_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column("created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.Column("updated_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.Column("created_by", sa.UUID(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], name="workflow_editors_user_id_fkey"),
        sa.ForeignKeyConstraint(["workflow_id"], ["workflows.id"], name="workflow_editors_workflow_id_fkey"),
        sa.PrimaryKeyConstraint("id", name="workflow_editors_pkey"),
        sa.UniqueConstraint("user_id", "workflow_id", name="workflow_editors_user_id_workflow_id_key"),
    )
    op.drop_table("permissions")
    op.execute("DROP TYPE IF EXISTS permissiontype;")
    # ### end Alembic commands ###
