"""Create models

Revision ID: 3119ba71c224
Revises:
Create Date: 2024-04-24 16:42:36.095889

"""

from typing import Sequence, Union

import sqlalchemy as sa
import sqlalchemy_utils

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "3119ba71c224"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "users",
        sa.Column("email", sqlalchemy_utils.types.email.EmailType(length=255), nullable=False),
        sa.Column("password", sa.String(), nullable=True),
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("created_by", sa.Uuid(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
    )
    op.create_index(op.f("ix_users_id"), "users", ["id"], unique=True)
    op.create_table(
        "workflows",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("created_by", sa.Uuid(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_workflows_id"), "workflows", ["id"], unique=True)
    op.create_table(
        "nodes",
        sa.Column("node_type", sa.Enum("start", "message", "condition", "end", name="nodetype"), nullable=False),
        sa.Column("workflow_id", sa.Uuid(), nullable=False),
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("created_by", sa.Uuid(), nullable=True),
        sa.ForeignKeyConstraint(
            ["workflow_id"],
            ["workflows.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_nodes_id"), "nodes", ["id"], unique=True)
    op.create_table(
        "permissions",
        sa.Column("user_id", sa.Uuid(), nullable=False),
        sa.Column("workflow_id", sa.Uuid(), nullable=False),
        sa.Column("permission", sa.Enum("view", "edit", "delete", name="permissiontype"), nullable=False),
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("created_by", sa.Uuid(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(
            ["workflow_id"],
            ["workflows.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("user_id", "workflow_id", "permission"),
    )
    op.create_index(op.f("ix_permissions_id"), "permissions", ["id"], unique=True)
    op.create_table(
        "condition_node_configurations",
        sa.Column("node_id", sa.Uuid(), nullable=False),
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("created_by", sa.Uuid(), nullable=True),
        sa.ForeignKeyConstraint(
            ["node_id"],
            ["nodes.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_condition_node_configurations_id"), "condition_node_configurations", ["id"], unique=True)
    op.create_table(
        "edges",
        sa.Column("status", sa.Enum("zero", "yes", "no", name="edgeweight"), nullable=False),
        sa.Column("source_node_id", sa.Uuid(), nullable=False),
        sa.Column("target_node_id", sa.Uuid(), nullable=False),
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("created_by", sa.Uuid(), nullable=True),
        sa.ForeignKeyConstraint(
            ["source_node_id"],
            ["nodes.id"],
        ),
        sa.ForeignKeyConstraint(
            ["target_node_id"],
            ["nodes.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("source_node_id", "target_node_id"),
    )
    op.create_index(op.f("ix_edges_id"), "edges", ["id"], unique=True)
    op.create_table(
        "end_node_configurations",
        sa.Column("node_id", sa.Uuid(), nullable=False),
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("created_by", sa.Uuid(), nullable=True),
        sa.ForeignKeyConstraint(
            ["node_id"],
            ["nodes.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_end_node_configurations_id"), "end_node_configurations", ["id"], unique=True)
    op.create_table(
        "message_node_configurations",
        sa.Column("status", sa.Enum("pending", "sent", "opened", name="nodestatus"), nullable=True),
        sa.Column("text", sa.String(), nullable=False),
        sa.Column("node_id", sa.Uuid(), nullable=False),
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("created_by", sa.Uuid(), nullable=True),
        sa.ForeignKeyConstraint(
            ["node_id"],
            ["nodes.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_message_node_configurations_id"), "message_node_configurations", ["id"], unique=True)
    op.create_table(
        "start_node_configurations",
        sa.Column("node_id", sa.Uuid(), nullable=False),
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("created_by", sa.Uuid(), nullable=True),
        sa.ForeignKeyConstraint(
            ["node_id"],
            ["nodes.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_start_node_configurations_id"), "start_node_configurations", ["id"], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_start_node_configurations_id"), table_name="start_node_configurations")
    op.drop_table("start_node_configurations")
    op.drop_index(op.f("ix_message_node_configurations_id"), table_name="message_node_configurations")
    op.drop_table("message_node_configurations")
    op.drop_index(op.f("ix_end_node_configurations_id"), table_name="end_node_configurations")
    op.drop_table("end_node_configurations")
    op.drop_index(op.f("ix_edges_id"), table_name="edges")
    op.drop_table("edges")
    op.drop_index(op.f("ix_condition_node_configurations_id"), table_name="condition_node_configurations")
    op.drop_table("condition_node_configurations")
    op.drop_index(op.f("ix_permissions_id"), table_name="permissions")
    op.drop_table("permissions")
    op.drop_index(op.f("ix_nodes_id"), table_name="nodes")
    op.drop_table("nodes")
    op.drop_index(op.f("ix_workflows_id"), table_name="workflows")
    op.drop_table("workflows")
    op.drop_index(op.f("ix_users_id"), table_name="users")
    op.drop_table("users")

    op.execute("DROP TYPE IF EXISTS nodetype;")
    op.execute("DROP TYPE IF EXISTS permissiontype;")
    op.execute("DROP TYPE IF EXISTS edgeweight;")
    op.execute("DROP TYPE IF EXISTS nodestatus;")
    # ### end Alembic commands ###
